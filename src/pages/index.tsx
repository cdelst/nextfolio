import { signIn, signOut, useSession } from "next-auth/react";

import Head from "next/head";
import Image from "next/image";
import { Inconsolata } from "next/font/google";
import Link from "next/link";
import { api } from "app/utils/api";
import { cx } from "class-variance-authority";
import { useEffect } from "react";

const font = Inconsolata({ subsets: ["latin"] });

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const { data, isLoading } = api.example.getAllObjectKeys.useQuery();

  const { data: imageLink, isLoading: isImageLoading } =
    api.example.getObject.useQuery(
      {
        key: data?.[0],
      },
      {
        enabled: data !== undefined,
      },
    );
  if (isLoading || isImageLoading || !imageLink) {
    return <div>Loading...</div>;
  }

  if (data) {
    console.log(imageLink);
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className={cx(
          " flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#632727] to-[#394a4b]",
          font.className,
        )}
      >
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <p className="text-9xl text-primary-foreground"> Case Delst </p>
          <h2 className="text-center text-4xl font-semibold text-white">
            I'm a full-stack developer.
          </h2>
          <h3 className="text-center text-3xl font-semibold text-white">
            I take pictures like this:
          </h3>
          <Image
            src={imageLink}
            width={1000}
            height={100}
            alt="random image"
            priority={true}
            className="rounded-xl"
          ></Image>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
